(ns clj.problem2)


; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
; By starting with 1 and 2, the first 10 terms will be:
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
; find the sum of the even-valued terms.

(defn sum-last-two-elements
  [elements]
    (reduce + (take-last 2 elements)))

(defn fib-sequence
  ([max-value]
    (case max-value
      1 [1N]
      2 [1N, 2N]
      3 [1N, 2N]
      4 [1N, 2N]
      (fib-sequence max-value [1N, 2N])))
  ([max-value elements]
    (let [sum-of-values (sum-last-two-elements elements)]
      (if (> sum-of-values max-value)
        elements
        (recur max-value
          (conj elements (bigint sum-of-values)))))))

(reduce + (filter even? (fib-sequence 4000000)))
